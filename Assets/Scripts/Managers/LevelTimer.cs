using System;using UnityEngine;using System.Collections;using System.Linq;using Attackers;using Defenders;using UnityEngine.UI;public class LevelTimer : MonoBehaviour{	public float LevelTime = 60;	public AudioClip VictoryBgm;	public GameObject VictoryCanvas;	private float _timeLeft;	private Slider _timeSlider;	public bool _isVictory;	void Awake ()	{		_timeLeft = LevelTime;		_timeSlider = GetComponent<Slider>();	}		void Update ()	{		_timeLeft = _timeLeft - Time.deltaTime;		_timeSlider.value = 1 - _timeLeft / LevelTime;			if (_timeLeft <= 0 && !_isVictory) Win();	}	private void Win()	{		// Set flag to prevent rerun		_isVictory = true;		// Kill all attacker on board		var attackers = FindObjectsOfType<Attacker>();		if(attackers != null && attackers.Length > 0)			foreach (var atker in attackers) atker.GetComponent<Health>().Die();		// Disable spawning		GameObject.FindObjectOfType<AttackerSpawner>().enabled = false;		// Disable star birthing		GameObject.FindObjectsOfType<StarTrophy>().ToList().ForEach(st => st.enabled = false);		// Place victory sound and UI after a delay		SoundManager.StopBgm();		SoundManager.PlayOneShot2D(VictoryBgm, 3, .6f);		Invoke("ShowWinScene", 3);	}	private void ShowWinScene()	{		Instantiate(VictoryCanvas);	}}